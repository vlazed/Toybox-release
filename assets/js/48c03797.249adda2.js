"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[454],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=u(r),h=n,f=p["".concat(l,".").concat(h)]||p[h]||d[h]||o;return r?a.createElement(f,c(c({ref:t},s),{},{components:r})):a.createElement(f,c({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:n,c[1]=i;for(var u=2;u<o;u++)c[u]=r[u];return a.createElement.apply(null,c)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7120:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:2},c="Data Structure",i={unversionedId:"tutorial-chat/data-structure",id:"tutorial-chat/data-structure",title:"Data Structure",description:"The chat audio pack may have the following structure:",source:"@site/docs/tutorial-chat/data-structure.md",sourceDirName:"tutorial-chat",slug:"/tutorial-chat/data-structure",permalink:"/Pickles-Toybox/docs/tutorial-chat/data-structure",draft:!1,editUrl:"https://github.com/vlazed/Toybox-release/edit/main/docs/tutorial-chat/data-structure.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Chat Voice Navigation",permalink:"/Pickles-Toybox/docs/tutorial-chat/navigation"},next:{title:"Dialogue",permalink:"/Pickles-Toybox/docs/category/dialogue"}},l={},u=[],s={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"data-structure"},"Data Structure"),(0,n.kt)("p",null,"The chat audio pack may have the following structure:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'{\n    [{ "oonoospoo", "ooooooooo" }] = {\n        id = ##,\n        callback = function(character) end,\n    },\n    ["ohhhhhhh"] = {\n        id = ##,\n        callback = function(character) end,\n    },\n    ...\n}\n')),(0,n.kt)("p",null,"The structure has these properties:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"id")," is the sound id"),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"callback")," is a function which generally takes the chatter's character, and any other arguments after it")),(0,n.kt)("p",null,"The chat controller permits a string or a table of strings for its keys. These represent the keywords that a player can say. "),(0,n.kt)("p",null,"Note that for a table of strings, a player can say the keywords in the table. These result in the same sound id and callback."))}d.isMDXComponent=!0}}]);